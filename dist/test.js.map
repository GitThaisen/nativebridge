{"version":3,"sources":["webpack://nativebridge/webpack/universalModuleDefinition","webpack://nativebridge/webpack/bootstrap","webpack://nativebridge/./test.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","button","document","querySelector","bridge","assign","nativebridge","clearButton","getElementById","payloadArea","counter","simulationCb","output","console","log","dispatchCustomEvent","topic","data","dispatchEvent","CustomEvent","detail","backup","webkit","postMessage","_ref","cid","echo","errors","message","errorCode","simulation","on","_len","arguments","length","args","Array","_key","insertAdjacentHTML","JSON","stringify","addEventListener","event","checked","messageHandlers","nativebridgeiOS","_JSON$parse","parse","innerHTML","cb","payload","off","json","emit"],"mappings":"CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,IACA,mBAAAG,eAAAC,IACAD,UAAAH,GACA,iBAAAC,QACAA,QAAA,aAAAD,IAEAD,EAAA,aAAAC,IARA,CASCK,OAAA,WACD,mBCTA,IAAAC,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAP,QAGA,IAAAC,EAAAI,EAAAE,IACAC,EAAAD,EACAE,GAAA,EACAT,YAUA,OANAU,EAAAH,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAQ,GAAA,EAGAR,EAAAD,QA2CA,OAtCAM,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAd,EAAAe,EAAAC,GACAV,EAAAW,EAAAjB,EAAAe,IACAG,OAAAC,eAAAnB,EAAAe,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAV,EAAAiB,EAAA,SAAAvB,GACAkB,OAAAC,eAAAnB,EAAA,cAAiDwB,OAAA,KAIjDlB,EAAAmB,EAAA,SAAAxB,GACA,IAAAe,EAAAf,KAAAyB,WACA,WAA2B,OAAAzB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAK,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAU,EAAAC,GAAsD,OAAAV,OAAAW,UAAAC,eAAAnB,KAAAgB,EAAAC,IAGtDtB,EAAAyB,EAAA,IAIAzB,IAAA0B,EAAA,mCCnEA,IAAMC,EAASC,SAASC,cAAc,UAChCC,EAASlB,OAAOmB,UAAWjC,OAAOkC,cAClCC,EAAcL,SAASM,eAAe,SACtCC,EAAcP,SAASM,eAAe,WACxCE,EAAU,EACRC,EAAeT,SAASM,eAAe,cACvCI,EAASV,SAASM,eAAe,UACvCK,QAAQC,IAAI,gBAAiBV,GAE7B,IAAMW,EAAsB,SAACC,EAAOC,GAClC7C,OAAO8C,cAAc,IAAI9C,OAAO+C,YAAY,gBAAiBC,QAASJ,QAAOC,YAGzEI,EAASjD,OAAOkD,OAGtB,SAASC,EAATC,GAAqC,IAAdR,EAAcQ,EAAdR,MAAOC,EAAOO,EAAPP,KACxB7C,OAAOkD,SAAWD,IACN,WAAVL,EACFC,EAAKQ,IAAM,WACQ,SAAVT,EACTC,EAAKS,MAAO,EAEZT,GACEU,SAAUC,QAAS,aAAcC,UAAW,KAGhDZ,EAAKa,YAAa,GAEpBf,EAAoBC,EAAOC,GAW7Bb,EAAO2B,GAAG,QAAS,WAAa,QAAAC,EAAAC,UAAAC,OAATC,EAASC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAATF,EAASE,GAAAJ,UAAAI,GAC9BzB,EAAO0B,mBAAmB,aAA1B,QAAgD5B,IAAhD,mBAA4E6B,KAAKC,UAAUL,GAA3F,aAGFlC,EAAOwC,iBAAiB,QAAS,SAAUC,GAXrC/B,EAAagC,QACfvE,OAAOkD,QAAUsB,iBAAkBC,iBAAkBtB,iBAErDnD,OAAOkD,OAASD,EAQ8B,IAAAyB,EAE1BP,KAAKQ,MAAMtC,EAAYuC,WAAtChC,EAFyC8B,EAEzC9B,MAAOC,EAFkC6B,EAElC7B,KAOdb,EAAO2B,GAAGf,EALC,SAALiC,EAAeC,GACnB9C,EAAO+C,IAAInC,EAAOiC,GAClB,IAAIG,EAAOb,KAAKC,UAAUU,EAAS,KAAM,MACzCtC,EAAO0B,mBAAmB,aAA1B,QAAgD5B,IAAhD,mBAA4E0C,EAA5E,aAGFhD,EAAOiD,KAAKrC,EAAOC,KAGrBV,EAAYkC,iBAAiB,QAAS,SAAUC,GAC9C9B,EAAOoC,UAAY","file":"test.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"nativebridge\"] = factory();\n\telse\n\t\troot[\"nativebridge\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","const button = document.querySelector('button')\nconst bridge = Object.assign({}, window.nativebridge)\nconst clearButton = document.getElementById('clear')\nconst payloadArea = document.getElementById('payload')\nlet counter = 0\nconst simulationCb = document.getElementById('simulation')\nconst output = document.getElementById('output')\nconsole.log('nativebridge:', bridge)\n\nconst dispatchCustomEvent = (topic, data) => {\n  window.dispatchEvent(new window.CustomEvent('nativebridge', {detail: {topic, data}}))\n}\n\nconst backup = window.webkit\n\n// mocked (injected) iOs handler\nfunction postMessage ({topic, data}) {\n  if (window.webkit !== backup) {\n    if (topic === 'gaConf') {\n      data.cid = 'MOCK_CID'\n    } else if (topic === 'test') {\n      data.echo = true\n    } else {\n      data = {\n        errors: [{message: 'mock error', errorCode: 1}]\n      }\n    }\n    data.simulation = true\n  }\n  dispatchCustomEvent(topic, data)\n}\n\nfunction setupSimulator () {\n  if (simulationCb.checked) {\n    window.webkit = {messageHandlers: {nativebridgeiOS: {postMessage}}}\n  } else {\n    window.webkit = backup\n  }\n}\n\nbridge.on('error', (...args) => {\n  output.insertAdjacentHTML('afterbegin', `<pre>${counter++} - From native: ${JSON.stringify(args)} </pre>`)\n})\n\nbutton.addEventListener('click', function (event) {\n  setupSimulator()\n  const {topic, data} = JSON.parse(payloadArea.innerHTML)\n\n  const cb = function (payload) {\n    bridge.off(topic, cb)\n    var json = JSON.stringify(payload, null, '  ')\n    output.insertAdjacentHTML('afterbegin', `<pre>${counter++} - From native: ${json} </pre>`)\n  }\n  bridge.on(topic, cb)\n  bridge.emit(topic, data)\n})\n\nclearButton.addEventListener('click', function (event) {\n  output.innerHTML = 'Â '\n})\n"],"sourceRoot":""}