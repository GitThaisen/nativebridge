!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.nativebridge=t():e.nativebridge=t()}(this,function(){return function(e){function t(o){if(n[o])return n[o].exports;var i=n[o]={i:o,l:!1,exports:{}};return e[o].call(i.exports,i,i.exports,t),i.l=!0,i.exports}var n={};return t.m=e,t.c=n,t.d=function(e,n,o){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:o})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="/",t(t.s=0)}([function(e,t,n){"use strict";function o(e,t){if("function"!=typeof t)throw new Error("Handler must be of type function");(c[e]=c[e]||[]).push(t)}function i(e,t){c[e]=(c[e]||[]).filter(function(e){return t&&e!==t})}function r(e,t){o(e,function n(){i(e,n),t.apply(void 0,arguments)})}function d(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(window.webkit&&window.webkit.messageHandlers)window.webkit.messageHandlers.nativebridgeiOS.postMessage({type:e,data:t});else{if(!window.NativeBridgeAndroid)throw new Error("No native bridge defined");window.NativeBridgeAndroid.send(JSON.stringify({type:e,data:t}))}}function f(e){var t=e.detail,n=t.type,o=t.data;(c[n]||[]).forEach(function(e){return e(o)})}function u(){window.addEventListener("nativebridge",f)}function a(){Object.keys(c).forEach(function(e){Object.keys(c[e]).forEach(function(t){delete c[e][t]}),delete c[e]}),window.removeEventListener("nativebridge",f)}Object.defineProperty(t,"__esModule",{value:!0}),t.on=o,t.off=i,t.once=r,t.emit=d,t.setupNativeLink=u,t.destroy=a;var c={};"undefined"!=typeof window&&u()}])});
//# sourceMappingURL=nativebridge.min.js.map